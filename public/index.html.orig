<!-- public/index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Harmony | AI Music Discovery</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #0078d7;
            --secondary-color: #005a9e;
            --accent-color: #0078d7;
            --background-color: #f5f5f5;
            --surface-color: #ffffff;
            --text-primary: #333333;
            --text-secondary: #767676;
            --text-on-primary: #ffffff;
            --shadow-sm: 0 2px 8px rgba(0,0,0,0.05);
            --shadow-md: 0 4px 12px rgba(0,0,0,0.08);
            --shadow-lg: 0 8px 24px rgba(0,0,0,0.12);
            --radius-sm: 4px;
            --radius-md: 8px;
            --radius-lg: 12px;
            --font-primary: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            --transition-standard: all 0.25s ease;
        }
        
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
        
        body {
            font-family: var(--font-primary);
            background-color: var(--background-color);
            color: var(--text-primary);
            line-height: 1.5;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }
        
        header {
            text-align: center;
            margin-bottom: 3rem;
            padding-top: 1rem;
        }
        
        .logo-container {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 1.5rem;
        }
        
        .logo {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 58px;
            height: 58px;
            background: var(--primary-color);
            border-radius: 14px;
            box-shadow: var(--shadow-md);
        }
        
        .logo i {
            color: white;
            font-size: 28px;
        }
        
        h1 {
            font-size: 2.4rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            letter-spacing: -0.02em;
        }
        
        .tagline {
            font-size: 1.1rem;
            color: var(--text-secondary);
            margin-bottom: 0.5rem;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }
        
        .input-card {
            background-color: var(--surface-color);
            padding: 2rem;
            border-radius: var(--radius-lg);
            margin-bottom: 2.5rem;
            box-shadow: var(--shadow-sm);
            transition: var(--transition-standard);
            border: 1px solid rgba(0,0,0,0.08);
        }
        
        .input-card:hover {
            box-shadow: var(--shadow-md);
        }
        
        .form-group {
            margin-bottom: 1.5rem;
        }
        
        label {
            display: block;
            margin-bottom: 0.75rem;
            font-weight: 500;
            font-size: 0.95rem;
        }
        
        textarea {
            width: 100%;
            padding: 1rem;
            border: 1px solid rgba(0,0,0,0.12);
            border-radius: var(--radius-md);
            background-color: var(--surface-color);
            color: var(--text-primary);
            font-family: var(--font-primary);
            font-size: 1rem;
            min-height: 120px;
            resize: vertical;
            transition: var(--transition-standard);
        }
        
        textarea:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(0,120,215,0.15);
        }
        
        .button-container {
            display: flex;
            justify-content: flex-end;
        }
        
        button {
            background: var(--primary-color);
            color: var(--text-on-primary);
            border: none;
            padding: 0.8rem 1.5rem;
            font-size: 0.95rem;
            border-radius: var(--radius-md);
            cursor: pointer;
            transition: var(--transition-standard);
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
        }
        
        button:hover {
            background: var(--secondary-color);
            transform: translateY(-1px);
            box-shadow: var(--shadow-sm);
        }
        
        button:active {
            transform: translateY(0);
        }
        
        button i {
            font-size: 1rem;
        }
        
        .results-section {
            display: none;
        }
        
        .results-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        
        .results-header h2 {
            font-size: 1.6rem;
            font-weight: 600;
            letter-spacing: -0.02em;
        }
        
        .feature-card {
            background-color: var(--surface-color);
            padding: 1.5rem;
            border-radius: var(--radius-lg);
            margin-bottom: 2rem;
            box-shadow: var(--shadow-sm);
            border: 1px solid rgba(0,0,0,0.08);
        }
        
        .feature-card h3 {
            margin-bottom: 1.5rem;
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--text-primary);
        }
        
        .recommendation-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 1.5rem;
        }
        
        .recommendation-card {
            background-color: var(--surface-color);
            border-radius: var(--radius-lg);
            overflow: hidden;
            transition: var(--transition-standard);
            box-shadow: var(--shadow-sm);
            border: 1px solid rgba(0,0,0,0.08);
            height: 100%;
            display: flex;
            flex-direction: column;
        }
        
        .recommendation-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-md);
        }
        
        .card-header {
            padding: 0;
            position: relative;
            height: 140px;
            overflow: hidden;
        }
        
        .header-img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-size: cover;
            background-position: center;
            opacity: 0.85;
        }
        
        .header-img::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(to bottom, rgba(0,0,0,0.2), rgba(0,0,0,0.5));
        }
        
        .header-content {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 1.5rem;
            z-index: 1;
        }
        
        .card-body {
            padding: 1.5rem;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
        }
        
        .song-title {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 0.3rem;
            color: white;
            letter-spacing: -0.01em;
        }
        
        .song-artist {
            font-size: 0.95rem;
            color: rgba(255,255,255,0.9);
            font-weight: 500;
        }
        
        .song-genres {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-bottom: 1.5rem;
        }
        
        .genre-tag {
            background-color: rgba(0,0,0,0.05);
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 0.75rem;
            color: var(--text-secondary);
            font-weight: 500;
        }
        
        .match-score {
            margin-top: auto;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .match-label {
            font-size: 0.85rem;
            color: var(--text-secondary);
            font-weight: 500;
        }
        
        .score-bar {
            flex-grow: 1;
            height: 4px;
            background-color: rgba(0,0,0,0.06);
            border-radius: 2px;
            overflow: hidden;
        }
        
        .score-fill {
            height: 100%;
            background: var(--primary-color);
            border-radius: 2px;
        }
        
        .score-value {
            font-weight: 600;
            font-size: 0.9rem;
            min-width: 50px;
            text-align: right;
        }
        
        .feature-bars {
            display: flex;
            flex-direction: column;
            gap: 1.25rem;
        }
        
        .feature-item {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .feature-name {
            width: 120px;
            font-size: 0.9rem;
            font-weight: 500;
            color: var(--text-secondary);
        }
        
        .feature-bar {
            flex-grow: 1;
            height: 6px;
            background-color: rgba(0,0,0,0.06);
            border-radius: 3px;
            overflow: hidden;
        }
        
        .feature-fill {
            height: 100%;
            border-radius: 3px;
            transition: width 1s ease-out;
        }
        
        .loading {
            display: none;
            text-align: center;
            padding: 3rem 1rem;
        }
        
        .loading-content {
            max-width: 400px;
            margin: 0 auto;
        }
        
        .spinner-container {
            margin-bottom: 2rem;
        }
        
        .spinner {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: conic-gradient(rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 10%, var(--primary-color) 100%);
            -webkit-mask: radial-gradient(circle closest-side, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 65%, #000 66%, #000 100%);
            mask: radial-gradient(circle closest-side, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 65%, #000 66%, #000 100%);
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .loading-text {
            font-size: 1rem;
            color: var(--text-secondary);
            margin-bottom: 0.5rem;
        }
        
        .loading-subtext {
            font-size: 0.9rem;
            color: var(--text-secondary);
            opacity: 0.7;
        }
        
        .footer {
            text-align: center;
            margin-top: 4rem;
            padding-top: 1.5rem;
            padding-bottom: 1.5rem;
            color: var(--text-secondary);
            font-size: 0.85rem;
            border-top: 1px solid rgba(0,0,0,0.08);
        }
        
        @media (prefers-color-scheme: dark) {
            :root {
                --background-color: #1e1e1e;
                --surface-color: #2d2d2d;
                --text-primary: #ffffff;
                --text-secondary: #a0a0a0;
                --primary-color: #0078d7;
                --secondary-color: #0094ff;
            }
            
            textarea {
                border-color: rgba(255,255,255,0.1);
            }
            
            .recommendation-card,
            .feature-card,
            .input-card {
                border-color: rgba(255,255,255,0.05);
            }
            
            .genre-tag {
                background-color: rgba(255,255,255,0.08);
                color: rgba(255,255,255,0.7);
            }
            
            .score-bar,
            .feature-bar {
                background-color: rgba(255,255,255,0.1);
            }
            
            .footer {
                border-color: rgba(255,255,255,0.05);
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="logo-container">
                <div class="logo">
                    <i class="fas fa-music"></i>
                </div>
            </div>
            <h1>Harmony</h1>
            <p class="tagline">Discover your perfect soundtrack using advanced AI-powered music recommendations</p>
        </header>
        
        <section class="input-card">
            <div class="form-group">
                <label for="preference">Describe the music you're in the mood for</label>
                <textarea id="preference" placeholder="For example: I'm looking for something energetic with a strong beat to help me focus while working. I enjoy electronic music with interesting melodies."></textarea>
            </div>
            <div class="button-container">
                <button id="recommend-btn">
                    <i class="fas fa-wand-magic-sparkles"></i> Generate Recommendations
                </button>
            </div>
        </section>
        
        <div class="loading" id="loading">
            <div class="loading-content">
                <div class="spinner-container">
                    <div class="spinner"></div>
                </div>
                <p class="loading-text">Analyzing your preferences</p>
                <p class="loading-subtext">Our AI is finding the perfect music matches for you...</p>
            </div>
        </div>
        
        <section class="results-section" id="results">
            <div class="results-header">
                <h2>Your Personalized Selection</h2>
            </div>
            
            <div class="feature-card" id="feature-analysis">
                <h3>How we understood your preferences</h3>
                <div class="feature-bars" id="feature-bars">
                    <!-- Will be populated by JS -->
                </div>
            </div>
            
            <div class="recommendation-grid" id="recommendations">
                <!-- Will be populated by JS -->
            </div>
        </section>
        
        <footer class="footer">
            <p>Harmony © 2025 | AI-Powered Music Discovery</p>
        </footer>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const preferenceInput = document.getElementById('preference');
            const recommendBtn = document.getElementById('recommend-btn');
            const loadingSection = document.getElementById('loading');
            const resultsSection = document.getElementById('results');
            const recommendationsGrid = document.getElementById('recommendations');
            const featureBars = document.getElementById('feature-bars');
            
            // Feature names and colors for visualization
            const features = [
                { name: 'Energy', color: '#0078d7' },
                { name: 'Tempo', color: '#107c10' },
                { name: 'Danceability', color: '#5c2d91' },
                { name: 'Mood', color: '#d83b01' },
                { name: 'Popularity', color: '#ffb900' }
            ];
            
            // Album cover patterns for visual interest
            const albumPatterns = [
                'linear-gradient(120deg, #e65100, #ff9800)',
                'linear-gradient(120deg, #0277bd, #03a9f4)',
                'linear-gradient(120deg, #1b5e20, #4caf50)',
                'linear-gradient(120deg, #4a148c, #9c27b0)',
                'linear-gradient(120deg, #b71c1c, #f44336)',
                'linear-gradient(120deg, #004d40, #009688)',
                'linear-gradient(120deg, #0d47a1, #2196f3)',
                'linear-gradient(120deg, #827717, #cddc39)',
                'linear-gradient(120deg, #311b92, #673ab7)',
                'linear-gradient(120deg, #880e4f, #e91e63)',
                'linear-gradient(120deg, #bf360c, #ff5722)',
                'linear-gradient(120deg, #01579b, #03a9f4)'
            ];
            
            recommendBtn.addEventListener('click', async function() {
                const preference = preferenceInput.value.trim();
                
                if (!preference) {
                    alert('Please describe what kind of music you\'re looking for.');
                    return;
                }
                
                // Show loading
                loadingSection.style.display = 'block';
                resultsSection.style.display = 'none';
                
                try {
                    // Make API request
                    const response = await fetch('/api/recommend', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ preference })
                    });
                    
                    if (!response.ok) {
                        throw new Error('Failed to get recommendations');
                    }
                    
                    const data = await response.json();
                    
                    // Simulate a slight delay to show the loading animation
                    setTimeout(() => {
                        // Hide loading, show results
                        loadingSection.style.display = 'none';
                        resultsSection.style.display = 'block';
                        
                        // Render feature analysis
                        renderFeatureAnalysis(data.featureVector);
                        
                        // Render recommendations
                        renderRecommendations(data.recommendations);
                    }, 1200);
                    
                } catch (error) {
                    console.error('Error:', error);
                    loadingSection.style.display = 'none';
                    alert('An error occurred. Please try again.');
                }
            });
            
            function renderFeatureAnalysis(featureVector) {
                featureBars.innerHTML = '';
                
                features.forEach((feature, index) => {
                    const value = featureVector[index];
                    
                    const featureItem = document.createElement('div');
                    featureItem.className = 'feature-item';
                    
                    const featureName = document.createElement('div');
                    featureName.className = 'feature-name';
                    featureName.textContent = feature.name;
                    
                    const featureBar = document.createElement('div');
                    featureBar.className = 'feature-bar';
                    
                    const featureFill = document.createElement('div');
                    featureFill.className = 'feature-fill';
                    featureFill.style.backgroundColor = feature.color;
                    
                    // Set width with a delay for animation
                    setTimeout(() => {
                        featureFill.style.width = `${value * 100}%`;
                    }, 100 + index * 100);
                    
                    featureBar.appendChild(featureFill);
                    featureItem.appendChild(featureName);
                    featureItem.appendChild(featureBar);
                    
                    featureBars.appendChild(featureItem);
                });
            }
            
            function renderRecommendations(recommendations) {
                recommendationsGrid.innerHTML = '';
                
                recommendations.forEach((song, index) => {
                    const card = document.createElement('div');
                    card.className = 'recommendation-card';
                    
                    const scorePercentage = Math.round(song.similarity * 100);
                    const albumPattern = albumPatterns[index % albumPatterns.length];
                    
                    card.innerHTML = `
                        <div class="card-header">
                            <div class="header-img" style="background: ${albumPattern}"></div>
                            <div class="header-content">
                                <h3 class="song-title">${song.title}</h3>
                                <div class="song-artist">${song.artist}</div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="song-genres">
                                ${song.genres.map(genre => `<span class="genre-tag">${genre}</span>`).join('')}
                            </div>
                            <div class="match-score">
                                <span class="match-label">Match</span>
                                <div class="score-bar">
                                    <div class="score-fill" style="width: ${scorePercentage}%"></div>
                                </div>
                                <span class="score-value">${scorePercentage}%</span>
                            </div>
                        </div>
                    `;
                    
                    recommendationsGrid.appendChild(card);
                });
            }
            
            // Set a default example for demo purposes
            preferenceInput.value = "I want something energetic with a strong beat that I can work out to. I enjoy electronic music with powerful drops and high energy.";
        });
    </script>
</body>
</html>